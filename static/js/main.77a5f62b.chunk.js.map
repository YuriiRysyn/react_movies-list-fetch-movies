{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","setMovies","useState","movieName","setMovieName","previewMovie","setPreviewMovie","error","setError","findMovie","a","fetch","response","json","data","Response","Error","Title","Plot","Poster","imdbID","imdbid","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","movieIncludes","Object","values","forEach","App","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uDCL3BG,EAAY,SAAC,GAA2B,IAAzBL,EAAwB,EAAxBA,OAAQM,EAAgB,EAAhBA,UAAgB,EAChBC,mBAAS,IADO,mBAC3CC,EAD2C,KAChCC,EADgC,OAEVF,mBAAS,MAFC,mBAE3CG,EAF2C,KAE7BC,EAF6B,OAGxBJ,mBAAS,MAHe,mBAG3CK,EAH2C,KAGpCC,EAHoC,KAc5CC,EAAS,uCAAG,8BAAAC,EAAA,+EAGdC,MAAM,8CAAD,OAA+CR,IAHtC,cAERS,EAFQ,gBAIKA,EAASC,OAJd,UAMQ,WAFhBC,EAJQ,QAMLC,SANK,yCAOLP,EAASM,EAAKE,QAPT,OAUdV,EAAgB,CACdpB,MAAO4B,EAAKG,MACZ9B,YAAa2B,EAAKI,KAClB9B,OAAQ0B,EAAKK,OACb9B,QAAQ,8BAAD,OAAgCyB,EAAKM,QAC5CC,OAAQP,EAAKM,SAfD,kDAkBdZ,EAAS,mCAlBK,0DAAH,qDAsCf,OACE,oCACE,0BAAMlB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAYoC,IAAW,QAAS,CAAE,YAAanB,IAC/CoB,MAAOxB,EACPyB,SA9DW,SAACC,GACR,OAAVtB,GACFC,EAAS,MAGXJ,EAAayB,EAAMC,OAAOH,WA4DnBpB,GAEG,uBAAGjB,UAAU,kBAETiB,IAQV,yBAAKjB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,kBACVyC,QAAStB,GAHX,iBASF,yBAAKnB,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,oBACVyC,QA7DK,WACf,IAAIC,GAAgB,EAEhB3B,IACF4B,OAAOC,OAAOvC,GAAQwC,SAAQ,SAACtC,GACzBA,EAAMwB,SAAWhB,EAAagB,SAChCW,GAAgB,OAGE,IAAlBA,IACF/B,EAAU,GAAD,mBAAKN,GAAL,CAAaU,KACtBD,EAAa,QA+CT,sBAWN,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCe,GAAgB,kBAAC,EAAcA,M,OC3G3B+B,EAAM,WAAO,IAAD,EACKlC,mBAASY,GADd,mBAChBnB,EADgB,KACRM,EADQ,KAGvB,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWK,OAAQA,EAAQM,UAAWA,OCV9CoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.77a5f62b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ movies, setMovies }) => {\n  const [movieName, setMovieName] = useState('');\n  const [previewMovie, setPreviewMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onChangeFilter = (event) => {\n    if (error !== null) {\n      setError(null);\n    }\n\n    setMovieName(event.target.value);\n  };\n\n  // eslint-disable-next-line consistent-return\n  const findMovie = async() => {\n    try {\n      const response = await\n      fetch(`https://www.omdbapi.com/?apikey=b65353eb&t=${movieName}`);\n      const data = await response.json();\n\n      if (data.Response === 'False') {\n        return setError(data.Error);\n      }\n\n      setPreviewMovie({\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbid: data.imdbID,\n      });\n    } catch (err) {\n      setError('404 no connection to the server');\n    }\n  };\n\n  const addMovie = () => {\n    let movieIncludes = false;\n\n    if (previewMovie) {\n      Object.values(movies).forEach((movie) => {\n        if (movie.imdbid === previewMovie.imdbid) {\n          movieIncludes = true;\n        }\n      });\n      if (movieIncludes === false) {\n        setMovies([...movies, previewMovie]);\n        setMovieName('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={(classNames('input', { 'is-danger': error }))}\n              value={movieName}\n              onChange={onChangeFilter}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\">\n                {\n                  error\n                }\n              </p>\n            )\n          }\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {previewMovie && <MovieCard {...previewMovie} />}\n\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.shape({\n    imdbid: PropTypes.number.isRequired,\n\n  }).isRequired,\n  setMovies: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}